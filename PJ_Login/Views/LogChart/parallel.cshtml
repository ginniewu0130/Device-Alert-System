@using PJ_Login.ViewModels;
@using Newtonsoft.Json;
@model List<echartsViewModel>
@{
    ViewData["Title"] = "parallel";
}
<style>
    body{
        background-color: #9ccdf2;
    }

    #page-content-wrapper{
        background-color:white;
    }
    #chart-group-1,
    #chart-group-2 {
        display: none;
    }

    .collapsed {
        display: none !important;
    }
</style>
<div class="d-flex" id="wrapper">
    <!-- 側邊導覽列 -->
    <div class="bg-light border-right rounded" id="sidebar-wrapper">
        <div class="list-group list-group-flush">
            <a href="@Url.Action("parallel", "LogChart")" class="list-group-item list-group-item-action">主要路徑</a>
            <a href="#" class="list-group-item list-group-item-action toggle-collapse" data-target="#chart-group-1">原始資料</a>
            <div id="chart-group-1">
                <a href="@Url.Action("bar_accept", "LogChart")" class="list-group-item list-group-item-action">accept</a>
                <a href="@Url.Action("bar_client_rst", "LogChart")" class="list-group-item list-group-item-action">client_rst</a>
                <a href="@Url.Action("bar_close", "LogChart")" class="list-group-item list-group-item-action">close</a>
                <a href="@Url.Action("bar_deny", "LogChart")" class="list-group-item list-group-item-action">dney</a>
                <a href="@Url.Action("bar_ip_conn", "LogChart")" class="list-group-item list-group-item-action">ip_conn</a>
                <a href="@Url.Action("bar_server_rst", "LogChart")" class="list-group-item list-group-item-action">server_rst</a>
                <a href="@Url.Action("bar_timeout", "LogChart")" class="list-group-item list-group-item-action">timeout</a>
            </div>
            <a href="#" class="list-group-item list-group-item-action toggle-collapse" data-target="#chart-group-2">異常檢測</a>
            <div id="chart-group-2">
                <a href="@Url.Action("line_accept_anomlies", "LogChart")" class="list-group-item list-group-item-action">accept</a>
                <a href="@Url.Action("line_client_rst_anomlies", "LogChart")" class="list-group-item list-group-item-action">client_rst</a>
                <a href="@Url.Action("line_close_anomlies", "LogChart")" class="list-group-item list-group-item-action">close</a>
                <a href="@Url.Action("line_deny_anomlies", "LogChart")" class="list-group-item list-group-item-action">deny</a>
                <a href="@Url.Action("line_ip_conn_anomlies", "LogChart")" class="list-group-item list-group-item-action">ip_conn</a>
                <a href="@Url.Action("line_server_rst_anomlies", "LogChart")" class="list-group-item list-group-item-action">server_rst</a>
                <a href="@Url.Action("line_timeout_anomlies", "LogChart")" class="list-group-item list-group-item-action">timeout</a>
            </div>
        </div>
    </div>

    <!-- 內容區域 -->
    <div id="page-content-wrapper" class="rounded">
        <h1>平行座標圖</h1>
        <div id="chartContainer" style="width: 1000px; height: 500px;"></div>
    </div>

</div>

<script src="https://cdn.jsdelivr.net/npm/echarts@5.2.1/dist/echarts.min.js"></script>
<script src="~/lib/jquery/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        $('.toggle-collapse').click(function (e) {
            e.preventDefault();
            var target = $(this).data('target');
            $(target).slideToggle();
            $(this).toggleClass('collapsed');
        });
    });

    var dataJson = '@Html.Raw(JsonConvert.SerializeObject(Model))';
    var datas = JSON.parse(dataJson);
    var dataActionJson = '@Html.Raw(JsonConvert.SerializeObject(Model.Select(x => x.Action)))';
    var dataaction = JSON.parse(dataActionJson);
    var ActionData = [...new Set(dataaction)];
    var chart = echarts.init(document.getElementById('chartContainer'));
    var convertedData = datas.map(function (item) {
        return [item.x, item.Sport, item.y, item.Dport, item.Action];
    });
    var option;

    option = {
        parallelAxis: [
            { dim: 0, name: 'SIP' },
            { dim: 1, name: 'Sport' },
            { dim: 2, name: 'DIP' },
            { dim: 3, name: 'Dport' },
            {
                dim: 4,
                name: 'Action',
                type: 'category',
                data: ActionData
            }
        ],
        series: {
            type: 'parallel',
            lineStyle: {
                width: 4
            },
            data: convertedData
        }
    };
    chart.setOption(option);
</script>
