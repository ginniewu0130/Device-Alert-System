@{
    ViewData["Title"] = "TrainModelBtn";
}
<link href="~/lib/sweetalert2/sweetalert2.min.css" rel="stylesheet" />
<style>
    body {
        background-color: #9ccdf2;
    }
    .train-btn {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
        background-color: #555;
        color: white;
        font-size: 16px;
        padding: 16px 30px;
        border: none;
        cursor: pointer;
        border-radius: 5px;
        text-align: center;
    }

    .train-btn:hover {
        background-color: red;
    }
</style>
<p></p>
<button class="btn train-btn" onclick="showConfirmDialog()">開始訓練</button>

<script src="~/lib/sweetalert2/sweetalert2.min.js"></script>
<script>
    function showConfirmDialog() {
        Swal.fire({
            title: '確認開始訓練？',
            text: '這個操作將開始訓練模型，這可能需要一些時間，確定要繼續嗎？',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: '確定',
            cancelButtonText: '取消'
        }).then((result) => {
            if (result.isConfirmed) {
                // 在這裡可以觸發開始訓練的相關程式碼
                // 可以將訓練程序的相關邏輯放在這裡
                // 例如，呼叫後端 API 開始訓練模型
                Swal.fire(
                    '開始訓練！',
                    '模型正在訓練中...靜待LINE Notify通知!',
                    'success'
                );
               
            }
        });
}
</script>
